@page "/register"
@using ChatApplicationSignalR.Controllers
@using ChatApplicationSignalR.Managers
@using Microsoft.AspNetCore.Identity
@inject UserManager UserManager
@inject RoleManager RoleManager
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Register</PageTitle>

<div class="UserForm">
    <div>
        <h2>Sign Up</h2>
    </div>

    <div>
        <input class="UserInputFields" placeholder="Username" @bind="username" />
    </div>
    
    <div>
        <input class="UserInputFields" placeholder="Password" @bind="password"/>
    </div>

    <div>
        <input class="UserInputFields" placeholder="Confirm Password" @bind="confirmPassword"/>
    </div>

    @if (!string.IsNullOrEmpty(validationMessage))
    {
        <div>
            <p>@validationMessage</p>
        </div>
    }

    <div>
        <button @onclick="RegisterUser">Register</button>
    </div>

    <div>
        <p>Already have an account? <NavLink href="/">Log In</NavLink></p>
    </div>
</div>

<style>
    ::placeholder{
        color: dimgrey;
    }
</style>

@code {
    private string? validationMessage;
    private string? username;
    private string? password;
    private string? confirmPassword;

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;

        if (user.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/home");
        }
    }

    private async Task RegisterUser()
    {
        if (password != confirmPassword)
        {
            validationMessage = "Password and Confirm Password don't match";
            return;
        }
        if(username is not null && password is not null)
        {
            var result = await UserManager.AddUserAsync(username, password);
            if (result.Succeeded)
            {
                await UserManager.AssignRoleToUserAsync(username, "User");
                validationMessage = "";
                NavigationManager.NavigateTo("/home");
            }
            else
            {
                validationMessage = "Error Creating the User.";
            }
        }
    }
}

